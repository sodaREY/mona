<Application x:Class="mona.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:mona"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Стиль для кнопок левой панели-->
        <Style TargetType="Button" x:Key="LeftPanelBtn">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 3"/>
            <Setter Property="Padding" Value="0 10"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Width" Value="auto"/>

            <!--Меняем шаблона кнопк-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                            <ContentPresenter HorizontalAlignment="Left"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Изменяем фон кнопки при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <!--фон при наведении градиентом-->
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.9,1" StartPoint="0.3,0.4">
                                <GradientStop Color="#FF262068"/>
                                <GradientStop Color="#FF25217E" Offset="1.2"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!--Изменяем курсор при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <!--Кнопка авторизации в аккаунт-->
        <Style TargetType="Button" x:Key="AuthAccBtn">
            <Setter Property="Background" Value="#FF5155E3"/>
            <!--Создание нового шаблона кнопки-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Старый код (закругление углов кнопки без изминение шаблона)-->
            <!--<Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>-->
            <Style.Triggers>
                <!--Изменение увета фона при наведении на кнопку-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5155E3"/>
                </Trigger>
                <!--Изменение курсора при наведении на кнопку-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Button" x:Key="BtnStyleTest">
            <Setter Property="Background" Value="#FF5155E3"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--Стиль для стакпанели левой панели-->
        <Style TargetType="StackPanel" x:Key="LeftPanelSpl">
            <Setter Property="Orientation" Value="Horizontal"/>
            <!--<Setter Property="Margin" Value="0 3"/>-->
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!--Стиль для иконок в левой панели-->
        <Style TargetType="Image" x:Key="LeftPanelIcon">
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Margin" Value="7 0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!--У всех бордеров отключаем обводку-->
        <Style TargetType="Border">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="TextBox" x:Key="LoginTbx">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Height" Value="auto"/>
        </Style>

        <Style TargetType="PasswordBox" x:Key="PasswordBox">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Height" Value="auto"/>
        </Style>

        <Style TargetType="Button" x:Key="LogoutBtn">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="Background" Value="#FF5155E3"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Изменяем фон кнопки при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <!--фон при наведении градиентом-->
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.9,1" StartPoint="0.3,0.4">
                                <GradientStop Color="#FF262068"/>
                                <GradientStop Color="#FF25217E" Offset="1.2"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="AddBtn">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="Button">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
    </Application.Resources>
</Application>
